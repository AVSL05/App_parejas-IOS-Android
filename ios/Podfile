platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Workaround: Some gRPC pods reference a PrivacyInfo.xcprivacy at a path
    # that doesn't exist in the packaged pod, causing Xcode build failures.
    # Remove those missing resources from the copy resources phase.
    next unless ['gRPC-C++', 'gRPC-Core'].include?(target.name)

    # Only PBXNativeTarget has build phases we can iterate this way
    if target.respond_to?(:build_phases)
      target.build_phases.each do |phase|
        next unless phase.respond_to?(:isa) && phase.isa == 'PBXResourcesBuildPhase'
        phase.files.each do |build_file|
          ref = build_file.file_ref
          path = (ref && ref.respond_to?(:path)) ? ref.path : nil
          if path && path.end_with?('PrivacyInfo.xcprivacy')
            phase.remove_file_reference(ref)
          end
        end
      end
    end
  end
end
